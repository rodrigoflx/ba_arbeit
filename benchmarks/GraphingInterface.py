from abc import ABC, abstractmethod
from pathlib import Path

class GraphingInterface(ABC):
    """
    Abstract base class for graphing the results of the sampling a zipfian distribution.    
    """

    @abstractmethod
    def graph(self, data: dict, path: Path) -> None:
        """
        Graph the data generated by a sampler
        """
        pass


class RGraphing(GraphingInterface):
    """
    Graphing implementation that uses R to plot the data
    """

    def graph(self, data: dict, path: Path) -> None:
        pass

class MltpGraphing(GraphingInterface):
    """
    Graphing implementation that uses Matplotlib to plot the data
    """

    def graph(self, data: dict, path: Path) -> None:
        pass