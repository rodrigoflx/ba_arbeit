#!/bin/bash

# Ensure the script is run from the correct directory
SCRIPT_DIR="$(dirname "$0")"
FIO_GENZIPF="$SCRIPT_DIR/fio-genzipf"

# Check if fio-genzipf exists
if [ ! -x "$FIO_GENZIPF" ]; then
    echo "Error: fio-genzipf is not executable or missing in the current directory."
    exit 1
fi

# Variables
INPUT_FILE="zipf_output.csv"  # Temporary input file generated by fio-genzipf
OUTPUT_FILE="processed_output.csv"
NUM_BUCKETS=100  # Number of buckets

# Generate the CSV using fio-genzipf
echo "Running fio-genzipf..."
"$FIO_GENZIPF" -t zipf -i 0.8 -g 100 -b 4096 -o 100 -c > "$INPUT_FILE"

if [ $? -ne 0 ]; then
    echo "Error: fio-genzipf failed to generate the CSV."
    exit 1
fi

# Get total count for calculating relative frequency
TOTAL_COUNT=$(awk -F, 'NR > 1 { sum += $2 } END { print sum }' "$INPUT_FILE")

# Process the input file to divide ranks into buckets and calculate relative frequency
echo "Processing input file into buckets..."
awk -F, -v buckets=$NUM_BUCKETS -v total=$TOTAL_COUNT '
BEGIN {
    OFS = ",";
    print "bucket_num", "cnt", "rel_freq";
}
NR > 1 {
    rank = $1;
    count = $2;
    bucket = int(rank / buckets) + 1;  # Determine bucket number
    bucket_counts[bucket] += count;   # Accumulate count per bucket
}
END {
    for (bucket in bucket_counts) {
        cnt = bucket_counts[bucket];
        rel_freq = cnt / total;
        print bucket, cnt, rel_freq;
    }
}' "$INPUT_FILE" > "$OUTPUT_FILE"

# Output result
if [ $? -eq 0 ]; then
    echo "Processing complete. Output written to $OUTPUT_FILE."
else
    echo "Error: Processing failed."
    exit 1
fi

# Clean up temporary files
rm -f "$INPUT_FILE"

exit 0

